name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        strategy:
          max-parallel: 1
          fail-fast: false
          matrix:
            nodejs_version: [18, 20]
            operating_system: [ubuntu-latest]
            exclude:
              - nodejs_version: 18
                operating_system: macos-latest
        name: Unit Testing
        runs-on: ${{ matrix.operating_system }}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: ${{ matrix.nodejs_version }}
        
        - name: Cache NPM Dependencies
          uses: actions/cache@v4
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}   

        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          id: nodejs-unit-testing-step
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result-${{ matrix.operating_system }}-${{ matrix.nodejs_version }}
            path: test-results.xml
    code-coverage:
      name: Code Coverage
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - 18
          uses: actions/setup-node@v4
          with:
            node-version: 18

        - name: Cache NPM Dependencies
          uses: actions/cache@v4
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}   
  
        - name: Install Dependencies
          run: npm install
    
        - name: Check Code Coverage
          run: npm run coverage
          continue-on-error: true
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5

    docker:
      name: Containerization
      needs: [unit-testing, code-coverage]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: DockerHub login
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}
            
        - name: Docker Build For Testing
          uses: docker/build-push-action@v5
          with:
            context: .
            push: false
            tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

        - name: Docker Image Testing
          run: |
            docker images
            docker run --name solar-system-app -d \
              -p 3000:3000 \
              -e MONGO_URI=$MONGO_URI \
              -e MONGO_USERNAME=$MONGO_USERNAME \
              -e MONGO_PASSWORD=$MONGO_PASSWORD \
              ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

            export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app) 
            echo $IP

            echo Testing Image URL using wget
            wget -q -O - 127.0.0.1:3000/live | grep live